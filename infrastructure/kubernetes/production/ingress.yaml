apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: treum-ingress
  namespace: treum-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-rpm: "100"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;";
    
    # Proxy settings
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # WebSocket support
    nginx.ingress.kubernetes.io/websocket-services: "treum-api-service"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.treum.ai,https://www.treum.ai"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    
spec:
  tls:
  - hosts:
    - app.treum.ai
    - api.treum.ai
    - www.treum.ai
    secretName: treum-tls-cert
  
  rules:
  # Main application
  - host: app.treum.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: treum-frontend-service
            port:
              number: 80
  
  # API endpoints
  - host: api.treum.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: treum-api-service
            port:
              number: 8000
  
  # WebSocket endpoints
  - host: api.treum.ai
    http:
      paths:
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: treum-api-service
            port:
              number: 8000
  
  # Marketing website
  - host: www.treum.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: treum-landing-service
            port:
              number: 80

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@treum.ai
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: treum-tls-cert
  namespace: treum-production
spec:
  secretName: treum-tls-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - app.treum.ai
  - api.treum.ai
  - www.treum.ai

---
apiVersion: v1
kind: Service
metadata:
  name: treum-frontend-service
  namespace: treum-production
  labels:
    app: treum-frontend
spec:
  type: ClusterIP
  selector:
    app: treum-frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: treum-landing-service
  namespace: treum-production
  labels:
    app: treum-landing
spec:
  type: ClusterIP
  selector:
    app: treum-landing
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP