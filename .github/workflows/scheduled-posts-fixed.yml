name: Automated Content Posting (Fixed)

on:
  schedule:
    # Runs at specific times (UTC) - adjust for IST
    - cron: '30 3 * * *'  # 9:00 AM IST (3:30 AM UTC)
    - cron: '30 8 * * *'  # 2:00 PM IST (8:30 AM UTC)
    - cron: '30 13 * * *' # 7:00 PM IST (1:30 PM UTC)
    - cron: '30 15 * * *' # 9:00 PM IST (3:30 PM UTC)
  workflow_dispatch:  # Allow manual trigger

jobs:
  post-content:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Check Required Secrets
      run: |
        echo "Checking if required secrets are configured..."
        
        missing_secrets=""
        
        if [ -z "${{ secrets.LINKEDIN_ACCESS_TOKEN }}" ]; then
          echo "‚ö†Ô∏è WARNING: LINKEDIN_ACCESS_TOKEN not configured"
          missing_secrets="$missing_secrets LINKEDIN_ACCESS_TOKEN"
        else
          echo "‚úÖ LINKEDIN_ACCESS_TOKEN is configured"
        fi
        
        if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
          echo "‚ö†Ô∏è WARNING: TELEGRAM_BOT_TOKEN not configured"
          missing_secrets="$missing_secrets TELEGRAM_BOT_TOKEN"
        else
          echo "‚úÖ TELEGRAM_BOT_TOKEN is configured"
        fi
        
        if [ -z "${{ secrets.TELEGRAM_CHANNEL_ID }}" ]; then
          echo "‚ö†Ô∏è WARNING: TELEGRAM_CHANNEL_ID not configured (using default @AIFinanceNews2024)"
        else
          echo "‚úÖ TELEGRAM_CHANNEL_ID is configured"
        fi
        
        if [ -z "${{ secrets.TWITTER_CONSUMER_KEY }}" ]; then
          echo "‚ö†Ô∏è WARNING: Twitter/X credentials not configured"
          missing_secrets="$missing_secrets TWITTER_KEYS"
        else
          echo "‚úÖ Twitter/X credentials are configured"
        fi
        
        if [ -n "$missing_secrets" ]; then
          echo ""
          echo "üìù To add missing secrets:"
          echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo "2. Click 'New repository secret'"
          echo "3. Add the missing secrets listed above"
          echo ""
          echo "Continuing with available platforms..."
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install all required dependencies
        pip install requests python-dotenv openai yfinance pandas numpy
        pip install tweepy feedparser beautifulsoup4 lxml schedule
        echo "‚úÖ All dependencies installed successfully"
    
    - name: Verify files exist
      run: |
        echo "Checking required files..."
        files=("cloud_poster.py" "content_quality_system.py" "centralized_posting_queue.py" 
               "coherent_content_generator.py" "engagement_optimizer_v2.py" "content_validation_rules.py")
        
        for file in "${files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ùå $file not found"
            echo "Listing Python files:"
            ls -la *.py | head -20
            exit 1
          fi
        done
    
    - name: Test imports
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'dummy-key-for-import-test' }}
      run: |
        echo "Testing if all modules can be imported..."
        python -c "
        import os
        os.environ['OPENAI_API_KEY'] = os.environ.get('OPENAI_API_KEY', 'dummy-key')
        try:
            print('Importing cloud_poster...')
            from cloud_poster import CloudPoster
            print('‚úÖ All imports successful')
        except Exception as e:
            print(f'‚ùå Import error: {e}')
            import traceback
            traceback.print_exc()
            exit(1)
        "
    
    - name: Generate and Post Content
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      run: |
        echo "üöÄ Starting content generation and posting..."
        python cloud_poster.py || {
          echo "‚ùå Error occurred during posting"
          echo "Attempting to show error details..."
          python -c "import traceback; traceback.print_exc()" || true
          exit 1
        }
        echo "‚úÖ Content posting completed!"
    
    # NO ARTIFACT UPLOAD - This avoids the v3 deprecation issue entirely
    # History files are maintained locally in the repository