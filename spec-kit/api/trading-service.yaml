openapi: 3.1.0
info:
  title: AI Finance Agency - Trading Service
  description: |
    Trading Service handles order management, trade execution, portfolio tracking,
    market data integration, and institutional trading features.
  version: 1.0.0
  contact:
    name: API Support
    email: support@aifinance.agency
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://trading.aifinance.agency/v1
    description: Production server
  - url: https://staging-trading.aifinance.agency/v1
    description: Staging server
  - url: http://localhost:3003/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check trading service health status
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  # Order Management
  /orders:
    get:
      tags:
        - Orders
      summary: List user orders
      description: Retrieve paginated list of user orders with filtering
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, filled, partially_filled, cancelled, rejected]
        - name: symbol
          in: query
          schema:
            type: string
        - name: orderType
          in: query
          schema:
            type: string
            enum: [market, limit, stop_loss, take_profit]
        - name: side
          in: query
          schema:
            type: string
            enum: [buy, sell]
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'

    post:
      tags:
        - Orders
      summary: Create new order
      description: Submit a new trading order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid order data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient trading permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/bulk:
    post:
      tags:
        - Orders
      summary: Create bulk orders
      description: Submit multiple orders in a single request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkOrderDto'
      responses:
        '201':
          description: Bulk orders processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOrderResponse'

  /orders/search:
    get:
      tags:
        - Orders
      summary: Search orders
      description: Advanced order search with filtering and sorting
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: symbols
          in: query
          schema:
            type: array
            items:
              type: string
        - name: statuses
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [pending, filled, partially_filled, cancelled, rejected]
        - name: minAmount
          in: query
          schema:
            type: number
            format: decimal
        - name: maxAmount
          in: query
          schema:
            type: number
            format: decimal
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [createdAt, updatedAt, symbol, quantity, price]
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Search results retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'

  /orders/my-orders:
    get:
      tags:
        - Orders
      summary: Get current user orders
      description: Retrieve recent orders for the authenticated user
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: User orders retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'

  /orders/status/{status}:
    get:
      tags:
        - Orders
      summary: Get orders by status
      description: Retrieve orders filtered by specific status
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum: [pending, filled, partially_filled, cancelled, rejected]
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: Orders by status retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      description: Retrieve specific order details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Orders
      summary: Update order
      description: Modify existing order (only pending orders)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderDto'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Cannot update order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{id}/cancel:
    put:
      tags:
        - Orders
      summary: Cancel order
      description: Cancel a pending order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderDto'
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

  /orders/{id}/fill:
    post:
      tags:
        - Orders
      summary: Fill order
      description: Mark order as filled (system/admin only)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderFillDto'
      responses:
        '200':
          description: Order filled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

  # Analytics
  /orders/analytics/summary:
    get:
      tags:
        - Analytics
      summary: Get order analytics summary
      description: Retrieve comprehensive order statistics and metrics
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
            default: 30d
      responses:
        '200':
          description: Analytics summary retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAnalytics'

  /orders/analytics/performance:
    get:
      tags:
        - Analytics
      summary: Get order execution performance
      description: Retrieve order execution performance metrics
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y]
            default: 30d
      responses:
        '200':
          description: Performance metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionPerformance'

  # Position Management
  /positions:
    get:
      tags:
        - Positions
      summary: Get user positions
      description: Retrieve current trading positions
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [open, closed, partial]
      responses:
        '200':
          description: Positions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'

    post:
      tags:
        - Positions
      summary: Create position
      description: Open a new trading position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePositionDto'
      responses:
        '201':
          description: Position created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'

  /positions/{id}:
    get:
      tags:
        - Positions
      summary: Get position by ID
      description: Retrieve specific position details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Position retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'

    put:
      tags:
        - Positions
      summary: Update position
      description: Modify existing position
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePositionDto'
      responses:
        '200':
          description: Position updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'

  /positions/{id}/close:
    post:
      tags:
        - Positions
      summary: Close position
      description: Close an open trading position
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosePositionDto'
      responses:
        '200':
          description: Position closed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'

  # Market Data
  /market-data/{symbol}:
    get:
      tags:
        - Market Data
      summary: Get market data for symbol
      description: Retrieve current market data for a trading symbol
      parameters:
        - name: symbol
          in: path
          required: true
          schema:
            type: string
        - name: timeframe
          in: query
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h, 4h, 1d]
            default: 1m
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: Market data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketData'

  /market-data/{symbol}/quote:
    get:
      tags:
        - Market Data
      summary: Get real-time quote
      description: Get current bid/ask prices for a symbol
      parameters:
        - name: symbol
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quote retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'

  # Portfolio
  /portfolio:
    get:
      tags:
        - Portfolio
      summary: Get portfolio summary
      description: Retrieve user's portfolio overview
      responses:
        '200':
          description: Portfolio retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'

  /portfolio/performance:
    get:
      tags:
        - Portfolio
      summary: Get portfolio performance
      description: Retrieve portfolio performance metrics
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d, 1y, ytd, all]
            default: 30d
      responses:
        '200':
          description: Portfolio performance retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioPerformance'

  # Institutional Trading
  /institutional/allocations:
    get:
      tags:
        - Institutional
      summary: Get fund allocations
      description: Retrieve institutional fund allocation data
      responses:
        '200':
          description: Allocations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FundAllocation'

    post:
      tags:
        - Institutional
      summary: Create fund allocation
      description: Create new institutional fund allocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllocationDto'
      responses:
        '201':
          description: Allocation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundAllocation'

  /institutional/reports:
    get:
      tags:
        - Institutional
      summary: Get institutional reports
      description: Retrieve compliance and performance reports
      parameters:
        - name: reportType
          in: query
          schema:
            type: string
            enum: [compliance, performance, risk, attribution]
        - name: period
          in: query
          schema:
            type: string
            enum: [daily, weekly, monthly, quarterly]
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Reports retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionalReport'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: healthy
        timestamp:
          type: string
          format: date-time
        service:
          type: string
          example: trading-service
        version:
          type: string
          example: 1.0.0

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        timestamp:
          type: string
          format: date-time

    CreateOrderDto:
      type: object
      required:
        - symbol
        - orderType
        - side
        - quantity
      properties:
        symbol:
          type: string
          example: AAPL
        orderType:
          type: string
          enum: [market, limit, stop_loss, take_profit]
        side:
          type: string
          enum: [buy, sell]
        quantity:
          type: number
          format: decimal
          minimum: 0
        price:
          type: number
          format: decimal
          minimum: 0
        stopPrice:
          type: number
          format: decimal
        timeInForce:
          type: string
          enum: [GTC, IOC, FOK, DAY]
          default: GTC
        clientOrderId:
          type: string

    UpdateOrderDto:
      type: object
      properties:
        quantity:
          type: number
          format: decimal
        price:
          type: number
          format: decimal
        stopPrice:
          type: number
          format: decimal
        timeInForce:
          type: string
          enum: [GTC, IOC, FOK, DAY]

    CancelOrderDto:
      type: object
      properties:
        reason:
          type: string
          enum: [user_cancelled, insufficient_balance, invalid_price, risk_management]

    OrderFillDto:
      type: object
      required:
        - fillPrice
        - fillQuantity
      properties:
        fillPrice:
          type: number
          format: decimal
        fillQuantity:
          type: number
          format: decimal
        executionVenue:
          type: string
        executionTime:
          type: string
          format: date-time
        commission:
          type: number
          format: decimal
        fees:
          type: number
          format: decimal

    BulkOrderDto:
      type: object
      required:
        - orders
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderDto'
          maxItems: 100
        validateOnly:
          type: boolean
          default: false

    OrderResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        clientOrderId:
          type: string
        symbol:
          type: string
        orderType:
          type: string
          enum: [market, limit, stop_loss, take_profit]
        side:
          type: string
          enum: [buy, sell]
        quantity:
          type: number
          format: decimal
        price:
          type: number
          format: decimal
        stopPrice:
          type: number
          format: decimal
        status:
          type: string
          enum: [pending, filled, partially_filled, cancelled, rejected]
        executedQuantity:
          type: number
          format: decimal
        executedPrice:
          type: number
          format: decimal
        executedValue:
          type: number
          format: decimal
        remainingQuantity:
          type: number
          format: decimal
        averagePrice:
          type: number
          format: decimal
        commission:
          type: number
          format: decimal
        fees:
          type: number
          format: decimal
        timeInForce:
          type: string
          enum: [GTC, IOC, FOK, DAY]
        fillRate:
          type: number
          format: float
          minimum: 0
          maximum: 1
        isComplete:
          type: boolean
        submittedAt:
          type: string
          format: date-time
        executedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        fills:
          type: array
          items:
            $ref: '#/components/schemas/OrderFill'

    OrderFill:
      type: object
      properties:
        id:
          type: string
          format: uuid
        quantity:
          type: number
          format: decimal
        price:
          type: number
          format: decimal
        executionVenue:
          type: string
        timestamp:
          type: string
          format: date-time
        commission:
          type: number
          format: decimal
        fees:
          type: number
          format: decimal

    OrderListResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean

    BulkOrderResponse:
      type: object
      properties:
        totalOrders:
          type: integer
        successfulOrders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        failedOrders:
          type: array
          items:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/CreateOrderDto'
              error:
                type: string
        summary:
          type: object
          properties:
            successful:
              type: integer
            failed:
              type: integer
            totalValue:
              type: number
              format: decimal

    OrderAnalytics:
      type: object
      properties:
        totalOrders:
          type: integer
        totalVolume:
          type: number
          format: decimal
        totalValue:
          type: number
          format: decimal
        averageOrderSize:
          type: number
          format: decimal
        fillRate:
          type: number
          format: float
        ordersByStatus:
          type: object
          additionalProperties:
            type: integer
        ordersByType:
          type: object
          additionalProperties:
            type: integer
        topSymbols:
          type: array
          items:
            type: object
            properties:
              symbol:
                type: string
              orderCount:
                type: integer
              volume:
                type: number
                format: decimal
              value:
                type: number
                format: decimal
        dailyActivity:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              orderCount:
                type: integer
              volume:
                type: number
                format: decimal
              value:
                type: number
                format: decimal

    ExecutionPerformance:
      type: object
      properties:
        averageFillTime:
          type: number
          description: Average fill time in seconds
        averageFillRate:
          type: number
          format: float
          description: Average fill rate percentage
        totalCommissions:
          type: number
          format: decimal
        totalFees:
          type: number
          format: decimal
        executionQuality:
          type: object
          properties:
            averageSlippage:
              type: number
              format: float
            priceImprovement:
              type: number
              format: float
            marketImpact:
              type: number
              format: float
        venueBreakdown:
          type: object
          additionalProperties:
            type: object
            properties:
              orderCount:
                type: integer
              volume:
                type: number
                format: decimal
              averagePrice:
                type: number
                format: decimal
              fillRate:
                type: number
                format: float

    Position:
      type: object
      properties:
        id:
          type: string
          format: uuid
        symbol:
          type: string
        side:
          type: string
          enum: [long, short]
        quantity:
          type: number
          format: decimal
        averagePrice:
          type: number
          format: decimal
        currentPrice:
          type: number
          format: decimal
        marketValue:
          type: number
          format: decimal
        unrealizedPnL:
          type: number
          format: decimal
        realizedPnL:
          type: number
          format: decimal
        totalPnL:
          type: number
          format: decimal
        totalPnLPercent:
          type: number
          format: float
        status:
          type: string
          enum: [open, closed, partial]
        openedAt:
          type: string
          format: date-time
        closedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreatePositionDto:
      type: object
      required:
        - symbol
        - side
        - quantity
        - price
      properties:
        symbol:
          type: string
        side:
          type: string
          enum: [long, short]
        quantity:
          type: number
          format: decimal
        price:
          type: number
          format: decimal
        stopLoss:
          type: number
          format: decimal
        takeProfit:
          type: number
          format: decimal

    UpdatePositionDto:
      type: object
      properties:
        stopLoss:
          type: number
          format: decimal
        takeProfit:
          type: number
          format: decimal

    ClosePositionDto:
      type: object
      properties:
        quantity:
          type: number
          format: decimal
        price:
          type: number
          format: decimal
        orderType:
          type: string
          enum: [market, limit]
          default: market

    MarketData:
      type: object
      properties:
        symbol:
          type: string
        timeframe:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              open:
                type: number
                format: decimal
              high:
                type: number
                format: decimal
              low:
                type: number
                format: decimal
              close:
                type: number
                format: decimal
              volume:
                type: integer

    Quote:
      type: object
      properties:
        symbol:
          type: string
        bid:
          type: number
          format: decimal
        ask:
          type: number
          format: decimal
        bidSize:
          type: integer
        askSize:
          type: integer
        last:
          type: number
          format: decimal
        lastSize:
          type: integer
        timestamp:
          type: string
          format: date-time

    Portfolio:
      type: object
      properties:
        totalValue:
          type: number
          format: decimal
        cashBalance:
          type: number
          format: decimal
        portfolioValue:
          type: number
          format: decimal
        totalPnL:
          type: number
          format: decimal
        totalPnLPercent:
          type: number
          format: float
        dayPnL:
          type: number
          format: decimal
        dayPnLPercent:
          type: number
          format: float
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        allocations:
          type: array
          items:
            type: object
            properties:
              symbol:
                type: string
              percentage:
                type: number
                format: float
              value:
                type: number
                format: decimal

    PortfolioPerformance:
      type: object
      properties:
        period:
          type: string
        totalReturn:
          type: number
          format: float
        totalReturnValue:
          type: number
          format: decimal
        annualizedReturn:
          type: number
          format: float
        volatility:
          type: number
          format: float
        sharpeRatio:
          type: number
          format: float
        maxDrawdown:
          type: number
          format: float
        winRate:
          type: number
          format: float
        profitFactor:
          type: number
          format: float
        performanceChart:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              value:
                type: number
                format: decimal
              return:
                type: number
                format: float

    FundAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fundId:
          type: string
          format: uuid
        symbol:
          type: string
        targetAllocation:
          type: number
          format: float
        currentAllocation:
          type: number
          format: float
        value:
          type: number
          format: decimal
        deviation:
          type: number
          format: float
        lastRebalanced:
          type: string
          format: date-time

    CreateAllocationDto:
      type: object
      required:
        - fundId
        - symbol
        - targetAllocation
      properties:
        fundId:
          type: string
          format: uuid
        symbol:
          type: string
        targetAllocation:
          type: number
          format: float
          minimum: 0
          maximum: 1

    InstitutionalReport:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reportType:
          type: string
          enum: [compliance, performance, risk, attribution]
        period:
          type: string
        generatedAt:
          type: string
          format: date-time
        data:
          type: object
          additionalProperties: true

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT