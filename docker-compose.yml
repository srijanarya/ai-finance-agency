version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ai_finance_postgres
    environment:
      POSTGRES_DB: ai_finance_db
      POSTGRES_USER: ai_finance_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-securepassword123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_finance_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ai_finance_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: ai_finance_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://ai_finance_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/ai_finance_db
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    volumes:
      - .:/app
    ports:
      - "5000:5000"
      - "8000:8000"
    command: python master_control_system.py

  celery_worker:
    build: .
    container_name: ai_finance_celery_worker
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: postgresql://ai_finance_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/ai_finance_db
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    volumes:
      - .:/app
    command: celery -A celery_app worker --loglevel=info

  celery_beat:
    build: .
    container_name: ai_finance_celery_beat
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: postgresql://ai_finance_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/ai_finance_db
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    volumes:
      - .:/app
    command: celery -A celery_app beat --loglevel=info

  telegram_growth:
    build: .
    container_name: ai_finance_telegram_growth
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgresql://ai_finance_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/ai_finance_db
      REDIS_URL: redis://redis:6379
    volumes:
      - .:/app
    command: python telegram_growth_engine.py

volumes:
  postgres_data:
  redis_data: