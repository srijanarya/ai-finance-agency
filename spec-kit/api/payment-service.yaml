openapi: 3.1.0
info:
  title: AI Finance Agency - Payment Service
  description: |
    Payment Service handles payment processing, subscription management,
    billing, invoicing, and financial transaction management with Stripe integration.
  version: 1.0.0
  contact:
    name: API Support
    email: support@aifinance.agency
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://payments.aifinance.agency/v1
    description: Production server
  - url: https://staging-payments.aifinance.agency/v1
    description: Staging server
  - url: http://localhost:3005/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check payment service health status
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  # Payment Management
  /payments:
    get:
      tags:
        - Payments
      summary: Get user payments
      description: Retrieve paginated payment history with filtering options
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, completed, failed, refunded]
        - name: type
          in: query
          schema:
            type: string
            enum: [one_time, recurring, subscription]
        - name: currency
          in: query
          schema:
            type: string
            pattern: '^[A-Z]{3}$'
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
        - name: minAmount
          in: query
          schema:
            type: number
            format: decimal
            minimum: 0
        - name: maxAmount
          in: query
          schema:
            type: number
            format: decimal
            minimum: 0
        - name: search
          in: query
          schema:
            type: string
          description: Search in payment description
      responses:
        '200':
          description: Payments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Payments
      summary: Create new payment
      description: Initiate a new payment transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentDto'
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid payment data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/summary:
    get:
      tags:
        - Payments
      summary: Get payment summary
      description: Retrieve payment summary statistics for the user
      parameters:
        - name: currency
          in: query
          schema:
            type: string
            pattern: '^[A-Z]{3}$'
      responses:
        '200':
          description: Payment summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSummary'

  /payments/{id}:
    get:
      tags:
        - Payments
      summary: Get payment by ID
      description: Retrieve specific payment details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Payments
      summary: Cancel payment
      description: Cancel a pending payment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Cannot cancel payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/{id}/confirm:
    put:
      tags:
        - Payments
      summary: Confirm payment
      description: Confirm a pending payment with payment method
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPaymentDto'
      responses:
        '200':
          description: Payment confirmed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Cannot confirm payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/{id}/refund:
    post:
      tags:
        - Payments
      summary: Refund payment
      description: Process a refund for a completed payment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentDto'
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Cannot refund payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Wallet Management
  /wallets:
    get:
      tags:
        - Wallets
      summary: Get user wallets
      description: Retrieve user's wallet information
      responses:
        '200':
          description: Wallets retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wallet'

    post:
      tags:
        - Wallets
      summary: Create wallet
      description: Create a new wallet for the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletDto'
      responses:
        '201':
          description: Wallet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

  /wallets/{id}:
    get:
      tags:
        - Wallets
      summary: Get wallet by ID
      description: Retrieve specific wallet details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Wallet retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

    put:
      tags:
        - Wallets
      summary: Update wallet
      description: Update wallet information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletDto'
      responses:
        '200':
          description: Wallet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

  /wallets/{id}/transactions:
    get:
      tags:
        - Wallets
      summary: Get wallet transactions
      description: Retrieve transaction history for a specific wallet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: type
          in: query
          schema:
            type: string
            enum: [credit, debit]
      responses:
        '200':
          description: Wallet transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'

  # Subscription Management
  /subscriptions:
    get:
      tags:
        - Subscriptions
      summary: Get user subscriptions
      description: Retrieve user's subscription information
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'

    post:
      tags:
        - Subscriptions
      summary: Create subscription
      description: Create a new subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionDto'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /subscriptions/{id}:
    get:
      tags:
        - Subscriptions
      summary: Get subscription by ID
      description: Retrieve specific subscription details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Subscription retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

    put:
      tags:
        - Subscriptions
      summary: Update subscription
      description: Update subscription details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionDto'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

    delete:
      tags:
        - Subscriptions
      summary: Cancel subscription
      description: Cancel an active subscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Subscription cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  # Webhooks
  /webhooks/stripe:
    post:
      tags:
        - Webhooks
      summary: Stripe webhook endpoint
      description: Handle Stripe webhook events
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Webhook processed successfully
        '400':
          description: Invalid webhook payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Admin Endpoints
  /admin/payments/all:
    get:
      tags:
        - Admin
      summary: Get all payments (Admin)
      description: Retrieve all payments across all users (admin only)
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: userId
          in: query
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, completed, failed, refunded]
      responses:
        '200':
          description: All payments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/payments/{id}:
    get:
      tags:
        - Admin
      summary: Get any payment by ID (Admin)
      description: Retrieve any payment by ID (admin only)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/payments/{id}/refund:
    post:
      tags:
        - Admin
      summary: Force refund payment (Admin)
      description: Force refund any payment (admin only)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentDto'
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/payments/batch/refund:
    post:
      tags:
        - Admin
      summary: Batch refund payments (Admin)
      description: Refund multiple payments in batch (admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRefundDto'
      responses:
        '200':
          description: Batch refund processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRefundResponse'

  # Analytics
  /analytics/revenue:
    get:
      tags:
        - Analytics
      summary: Get revenue analytics (Admin)
      description: Retrieve revenue analytics and metrics (admin only)
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [day, week, month, year]
            default: month
        - name: currency
          in: query
          schema:
            type: string
            pattern: '^[A-Z]{3}$'
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Revenue analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueAnalytics'

  /analytics/failure-rate:
    get:
      tags:
        - Analytics
      summary: Get payment failure analytics (Admin)
      description: Retrieve payment failure rate analytics (admin only)
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [day, week, month]
            default: day
      responses:
        '200':
          description: Failure analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureAnalytics'

  # Metrics
  /metrics:
    get:
      tags:
        - Metrics
      summary: Get payment metrics
      description: Retrieve payment service metrics for monitoring
      responses:
        '200':
          description: Payment metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMetrics'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: healthy
        timestamp:
          type: string
          format: date-time
        service:
          type: string
          example: payment-service
        version:
          type: string
          example: 1.0.0

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        timestamp:
          type: string
          format: date-time

    CreatePaymentDto:
      type: object
      required:
        - amount
        - currency
        - paymentMethodId
      properties:
        amount:
          type: number
          format: decimal
          minimum: 0.01
          example: 99.99
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          example: USD
        description:
          type: string
          maxLength: 500
          example: Premium subscription payment
        paymentMethodId:
          type: string
          example: pm_1234567890
        metadata:
          type: object
          additionalProperties:
            type: string

    ConfirmPaymentDto:
      type: object
      required:
        - paymentMethodId
      properties:
        paymentMethodId:
          type: string
          example: pm_1234567890

    RefundPaymentDto:
      type: object
      properties:
        amount:
          type: number
          format: decimal
          minimum: 0.01
          description: Partial refund amount (optional, defaults to full refund)
        reason:
          type: string
          maxLength: 500
          description: Reason for refund

    Payment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        amount:
          type: number
          format: decimal
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        status:
          type: string
          enum: [pending, completed, failed, refunded, cancelled]
        type:
          type: string
          enum: [one_time, recurring, subscription]
        description:
          type: string
        paymentMethodId:
          type: string
        stripePaymentIntentId:
          type: string
        stripeChargeId:
          type: string
        refundAmount:
          type: number
          format: decimal
        refundReason:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        failureReason:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        refundedAt:
          type: string
          format: date-time

    PaymentsResponse:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer

    PaymentSummary:
      type: object
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        totalPaid:
          type: number
          format: decimal
        totalRefunded:
          type: number
          format: decimal
        netAmount:
          type: number
          format: decimal
        paymentCount:
          type: integer
        refundCount:
          type: integer
        averagePayment:
          type: number
          format: decimal
        lastPaymentDate:
          type: string
          format: date-time
        paymentsByStatus:
          type: object
          additionalProperties:
            type: integer
        monthlySpending:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
                format: date
              amount:
                type: number
                format: decimal
              count:
                type: integer

    CreateWalletDto:
      type: object
      required:
        - currency
        - type
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        type:
          type: string
          enum: [trading, savings, rewards]
        name:
          type: string
          maxLength: 100

    UpdateWalletDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        isActive:
          type: boolean

    Wallet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        type:
          type: string
          enum: [trading, savings, rewards]
        name:
          type: string
        balance:
          type: number
          format: decimal
        lockedBalance:
          type: number
          format: decimal
        availableBalance:
          type: number
          format: decimal
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/WalletTransaction'
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer

    WalletTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        walletId:
          type: string
          format: uuid
        type:
          type: string
          enum: [credit, debit]
        amount:
          type: number
          format: decimal
        balanceAfter:
          type: number
          format: decimal
        description:
          type: string
        reference:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time

    CreateSubscriptionDto:
      type: object
      required:
        - planId
        - paymentMethodId
      properties:
        planId:
          type: string
        paymentMethodId:
          type: string
        trialPeriodDays:
          type: integer
          minimum: 0
        metadata:
          type: object
          additionalProperties:
            type: string

    UpdateSubscriptionDto:
      type: object
      properties:
        planId:
          type: string
        paymentMethodId:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string

    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        planId:
          type: string
        stripeSubscriptionId:
          type: string
        status:
          type: string
          enum: [active, cancelled, past_due, unpaid, trialing]
        currentPeriodStart:
          type: string
          format: date-time
        currentPeriodEnd:
          type: string
          format: date-time
        trialStart:
          type: string
          format: date-time
        trialEnd:
          type: string
          format: date-time
        cancelledAt:
          type: string
          format: date-time
        cancelAtPeriodEnd:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    BatchRefundDto:
      type: object
      required:
        - paymentIds
      properties:
        paymentIds:
          type: array
          items:
            type: string
            format: uuid
          maxItems: 100
        reason:
          type: string
          maxLength: 500
        amount:
          type: number
          format: decimal
          description: Partial refund amount for all payments

    BatchRefundResponse:
      type: object
      properties:
        successful:
          type: array
          items:
            type: string
            format: uuid
        failed:
          type: array
          items:
            type: object
            properties:
              paymentId:
                type: string
                format: uuid
              error:
                type: string

    RevenueAnalytics:
      type: object
      properties:
        totalRevenue:
          type: number
          format: decimal
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        period:
          type: string
        dataPoints:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              revenue:
                type: number
                format: decimal
              transactions:
                type: integer

    FailureAnalytics:
      type: object
      properties:
        overall:
          type: object
          properties:
            total:
              type: integer
            failed:
              type: integer
            rate:
              type: number
              format: float
        byReason:
          type: array
          items:
            type: object
            properties:
              reason:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: float
        byPaymentMethod:
          type: array
          items:
            type: object
            properties:
              method:
                type: string
              total:
                type: integer
              failed:
                type: integer
              rate:
                type: number
                format: float

    PaymentMetrics:
      type: object
      properties:
        totalPayments:
          type: integer
        successfulPayments:
          type: integer
        failedPayments:
          type: integer
        successRate:
          type: number
          format: float
        totalRevenue:
          type: number
          format: decimal
        averageTransactionValue:
          type: number
          format: decimal
        processingTime:
          type: object
          properties:
            average:
              type: number
              description: Average processing time in seconds
            p95:
              type: number
              description: 95th percentile processing time
            p99:
              type: number
              description: 99th percentile processing time

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT