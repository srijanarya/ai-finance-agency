[tool:pytest]
# Pytest configuration for AI Finance Agency

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=80
    --durations=10
    --junitxml=junit.xml

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow tests
    fast: Fast tests
    api: API tests
    database: Database tests
    security: Security tests
    performance: Performance tests
    social: Social media tests
    market: Market data tests
    auth: Authentication tests
    content: Content generation tests
    asyncio: Async tests

# Test environment
env = 
    APP_ENV = testing
    DATABASE_URL = postgresql://ai_finance_user:testpassword@localhost:5432/ai_finance_test_db
    REDIS_URL = redis://localhost:6379/15
    JWT_SECRET = test-secret-key-for-testing-only
    SESSION_SECRET = test-session-secret-for-testing
    ENCRYPTION_KEY = test-encryption-key-for-testing-only
    ENABLE_AI_GENERATION = false
    ENABLE_AUTO_POSTING = false
    ENABLE_COMPLIANCE_CHECK = false
    ENABLE_MARKET_DATA = false
    DEBUG = true

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:sqlalchemy.*

# Test selection
minversion = 7.0