// source: signals.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.treum.signals.AssetType', null, global);
goog.exportSymbol('proto.treum.signals.CreateSignalRequest', null, global);
goog.exportSymbol('proto.treum.signals.ExpireSignalRequest', null, global);
goog.exportSymbol('proto.treum.signals.FollowSignalRequest', null, global);
goog.exportSymbol('proto.treum.signals.GetSignalPerformanceRequest', null, global);
goog.exportSymbol('proto.treum.signals.GetSignalRequest', null, global);
goog.exportSymbol('proto.treum.signals.GetUserSignalHistoryRequest', null, global);
goog.exportSymbol('proto.treum.signals.ListActiveSignalsRequest', null, global);
goog.exportSymbol('proto.treum.signals.ListSignalsRequest', null, global);
goog.exportSymbol('proto.treum.signals.ListSignalsResponse', null, global);
goog.exportSymbol('proto.treum.signals.RiskLevel', null, global);
goog.exportSymbol('proto.treum.signals.SignalPerformanceData', null, global);
goog.exportSymbol('proto.treum.signals.SignalPerformanceResponse', null, global);
goog.exportSymbol('proto.treum.signals.SignalResponse', null, global);
goog.exportSymbol('proto.treum.signals.SignalStatus', null, global);
goog.exportSymbol('proto.treum.signals.SignalType', null, global);
goog.exportSymbol('proto.treum.signals.SubscriptionTier', null, global);
goog.exportSymbol('proto.treum.signals.TimeFrame', null, global);
goog.exportSymbol('proto.treum.signals.UnfollowSignalRequest', null, global);
goog.exportSymbol('proto.treum.signals.UpdateSignalRequest', null, global);
goog.exportSymbol('proto.treum.signals.UserSignalFollow', null, global);
goog.exportSymbol('proto.treum.signals.UserSignalHistoryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.CreateSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.treum.signals.CreateSignalRequest.repeatedFields_, null);
};
goog.inherits(proto.treum.signals.CreateSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.CreateSignalRequest.displayName = 'proto.treum.signals.CreateSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.UpdateSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.UpdateSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.UpdateSignalRequest.displayName = 'proto.treum.signals.UpdateSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.GetSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.GetSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.GetSignalRequest.displayName = 'proto.treum.signals.GetSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.ExpireSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.ExpireSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.ExpireSignalRequest.displayName = 'proto.treum.signals.ExpireSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.ListSignalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.treum.signals.ListSignalsRequest.repeatedFields_, null);
};
goog.inherits(proto.treum.signals.ListSignalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.ListSignalsRequest.displayName = 'proto.treum.signals.ListSignalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.ListSignalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.treum.signals.ListSignalsResponse.repeatedFields_, null);
};
goog.inherits(proto.treum.signals.ListSignalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.ListSignalsResponse.displayName = 'proto.treum.signals.ListSignalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.SignalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.treum.signals.SignalResponse.repeatedFields_, null);
};
goog.inherits(proto.treum.signals.SignalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.SignalResponse.displayName = 'proto.treum.signals.SignalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.SignalPerformanceData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.SignalPerformanceData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.SignalPerformanceData.displayName = 'proto.treum.signals.SignalPerformanceData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.GetSignalPerformanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.GetSignalPerformanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.GetSignalPerformanceRequest.displayName = 'proto.treum.signals.GetSignalPerformanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.SignalPerformanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.SignalPerformanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.SignalPerformanceResponse.displayName = 'proto.treum.signals.SignalPerformanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.ListActiveSignalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.ListActiveSignalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.ListActiveSignalsRequest.displayName = 'proto.treum.signals.ListActiveSignalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.FollowSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.FollowSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.FollowSignalRequest.displayName = 'proto.treum.signals.FollowSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.UnfollowSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.UnfollowSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.UnfollowSignalRequest.displayName = 'proto.treum.signals.UnfollowSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.GetUserSignalHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.GetUserSignalHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.GetUserSignalHistoryRequest.displayName = 'proto.treum.signals.GetUserSignalHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.UserSignalHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.treum.signals.UserSignalHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.treum.signals.UserSignalHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.UserSignalHistoryResponse.displayName = 'proto.treum.signals.UserSignalHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.treum.signals.UserSignalFollow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.treum.signals.UserSignalFollow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.treum.signals.UserSignalFollow.displayName = 'proto.treum.signals.UserSignalFollow';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.treum.signals.CreateSignalRequest.repeatedFields_ = [13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.CreateSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.CreateSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.CreateSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.CreateSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assetType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    stopLoss: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    takeProfit: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    riskLevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timeFrame: jspb.Message.getFieldWithDefault(msg, 8, 0),
    confidence: jspb.Message.getFieldWithDefault(msg, 9, 0),
    analysis: jspb.Message.getFieldWithDefault(msg, 10, ""),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 12, ""),
    targetAudienceList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.CreateSignalRequest}
 */
proto.treum.signals.CreateSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.CreateSignalRequest;
  return proto.treum.signals.CreateSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.CreateSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.CreateSignalRequest}
 */
proto.treum.signals.CreateSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {!proto.treum.signals.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 3:
      var value = /** @type {!proto.treum.signals.SignalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStopLoss(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeProfit(value);
      break;
    case 7:
      var value = /** @type {!proto.treum.signals.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    case 8:
      var value = /** @type {!proto.treum.signals.TimeFrame} */ (reader.readEnum());
      msg.setTimeFrame(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfidence(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnalysis(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 13:
      var values = /** @type {!Array<!proto.treum.signals.SubscriptionTier>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTargetAudience(values[i]);
      }
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.CreateSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.CreateSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.CreateSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.CreateSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAssetType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getStopLoss();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTakeProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getTimeFrame();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAnalysis();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTargetAudienceList();
  if (f.length > 0) {
    writer.writePackedEnum(
      13,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.treum.signals.CreateSignalRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AssetType asset_type = 2;
 * @return {!proto.treum.signals.AssetType}
 */
proto.treum.signals.CreateSignalRequest.prototype.getAssetType = function() {
  return /** @type {!proto.treum.signals.AssetType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.treum.signals.AssetType} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setAssetType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SignalType type = 3;
 * @return {!proto.treum.signals.SignalType}
 */
proto.treum.signals.CreateSignalRequest.prototype.getType = function() {
  return /** @type {!proto.treum.signals.SignalType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.treum.signals.SignalType} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double price = 4;
 * @return {number}
 */
proto.treum.signals.CreateSignalRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double stop_loss = 5;
 * @return {number}
 */
proto.treum.signals.CreateSignalRequest.prototype.getStopLoss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setStopLoss = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double take_profit = 6;
 * @return {number}
 */
proto.treum.signals.CreateSignalRequest.prototype.getTakeProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setTakeProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional RiskLevel risk_level = 7;
 * @return {!proto.treum.signals.RiskLevel}
 */
proto.treum.signals.CreateSignalRequest.prototype.getRiskLevel = function() {
  return /** @type {!proto.treum.signals.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.treum.signals.RiskLevel} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional TimeFrame time_frame = 8;
 * @return {!proto.treum.signals.TimeFrame}
 */
proto.treum.signals.CreateSignalRequest.prototype.getTimeFrame = function() {
  return /** @type {!proto.treum.signals.TimeFrame} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.treum.signals.TimeFrame} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setTimeFrame = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional int32 confidence = 9;
 * @return {number}
 */
proto.treum.signals.CreateSignalRequest.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string analysis = 10;
 * @return {string}
 */
proto.treum.signals.CreateSignalRequest.prototype.getAnalysis = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setAnalysis = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp expires_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.CreateSignalRequest.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
*/
proto.treum.signals.CreateSignalRequest.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.CreateSignalRequest.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string created_by = 12;
 * @return {string}
 */
proto.treum.signals.CreateSignalRequest.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated SubscriptionTier target_audience = 13;
 * @return {!Array<!proto.treum.signals.SubscriptionTier>}
 */
proto.treum.signals.CreateSignalRequest.prototype.getTargetAudienceList = function() {
  return /** @type {!Array<!proto.treum.signals.SubscriptionTier>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<!proto.treum.signals.SubscriptionTier>} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setTargetAudienceList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {!proto.treum.signals.SubscriptionTier} value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.addTargetAudience = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.clearTargetAudienceList = function() {
  return this.setTargetAudienceList([]);
};


/**
 * repeated string tags = 14;
 * @return {!Array<string>}
 */
proto.treum.signals.CreateSignalRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.CreateSignalRequest} returns this
 */
proto.treum.signals.CreateSignalRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.UpdateSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.UpdateSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.UpdateSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UpdateSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stopLoss: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    takeProfit: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    confidence: jspb.Message.getFieldWithDefault(msg, 5, 0),
    analysis: jspb.Message.getFieldWithDefault(msg, 6, ""),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.UpdateSignalRequest}
 */
proto.treum.signals.UpdateSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.UpdateSignalRequest;
  return proto.treum.signals.UpdateSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.UpdateSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.UpdateSignalRequest}
 */
proto.treum.signals.UpdateSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStopLoss(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeProfit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfidence(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnalysis(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.UpdateSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.UpdateSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.UpdateSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UpdateSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStopLoss();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTakeProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAnalysis();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double price = 2;
 * @return {number}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double stop_loss = 3;
 * @return {number}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getStopLoss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.setStopLoss = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double take_profit = 4;
 * @return {number}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getTakeProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.setTakeProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 confidence = 5;
 * @return {number}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string analysis = 6;
 * @return {string}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getAnalysis = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.setAnalysis = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp expires_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.UpdateSignalRequest.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
*/
proto.treum.signals.UpdateSignalRequest.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.UpdateSignalRequest} returns this
 */
proto.treum.signals.UpdateSignalRequest.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.UpdateSignalRequest.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.GetSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.GetSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.GetSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.GetSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.GetSignalRequest}
 */
proto.treum.signals.GetSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.GetSignalRequest;
  return proto.treum.signals.GetSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.GetSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.GetSignalRequest}
 */
proto.treum.signals.GetSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.GetSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.GetSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.GetSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.GetSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.treum.signals.GetSignalRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.GetSignalRequest} returns this
 */
proto.treum.signals.GetSignalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.ExpireSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.ExpireSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.ExpireSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ExpireSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    finalPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    performance: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.ExpireSignalRequest}
 */
proto.treum.signals.ExpireSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.ExpireSignalRequest;
  return proto.treum.signals.ExpireSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.ExpireSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.ExpireSignalRequest}
 */
proto.treum.signals.ExpireSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFinalPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPerformance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.ExpireSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.ExpireSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.ExpireSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ExpireSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFinalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getPerformance();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.treum.signals.ExpireSignalRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.ExpireSignalRequest} returns this
 */
proto.treum.signals.ExpireSignalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double final_price = 2;
 * @return {number}
 */
proto.treum.signals.ExpireSignalRequest.prototype.getFinalPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ExpireSignalRequest} returns this
 */
proto.treum.signals.ExpireSignalRequest.prototype.setFinalPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double performance = 3;
 * @return {number}
 */
proto.treum.signals.ExpireSignalRequest.prototype.getPerformance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ExpireSignalRequest} returns this
 */
proto.treum.signals.ExpireSignalRequest.prototype.setPerformance = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.treum.signals.ListSignalsRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.ListSignalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.ListSignalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.ListSignalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ListSignalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    assetTypeFilter: jspb.Message.getFieldWithDefault(msg, 3, 0),
    typeFilter: jspb.Message.getFieldWithDefault(msg, 4, 0),
    statusFilter: jspb.Message.getFieldWithDefault(msg, 5, 0),
    riskLevelFilter: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timeFrameFilter: jspb.Message.getFieldWithDefault(msg, 7, 0),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    userTier: jspb.Message.getFieldWithDefault(msg, 9, 0),
    fromDate: (f = msg.getFromDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    toDate: (f = msg.getToDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.ListSignalsRequest}
 */
proto.treum.signals.ListSignalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.ListSignalsRequest;
  return proto.treum.signals.ListSignalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.ListSignalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.ListSignalsRequest}
 */
proto.treum.signals.ListSignalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {!proto.treum.signals.AssetType} */ (reader.readEnum());
      msg.setAssetTypeFilter(value);
      break;
    case 4:
      var value = /** @type {!proto.treum.signals.SignalType} */ (reader.readEnum());
      msg.setTypeFilter(value);
      break;
    case 5:
      var value = /** @type {!proto.treum.signals.SignalStatus} */ (reader.readEnum());
      msg.setStatusFilter(value);
      break;
    case 6:
      var value = /** @type {!proto.treum.signals.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevelFilter(value);
      break;
    case 7:
      var value = /** @type {!proto.treum.signals.TimeFrame} */ (reader.readEnum());
      msg.setTimeFrameFilter(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 9:
      var value = /** @type {!proto.treum.signals.SubscriptionTier} */ (reader.readEnum());
      msg.setUserTier(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromDate(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.ListSignalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.ListSignalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.ListSignalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ListSignalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAssetTypeFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTypeFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getStatusFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getRiskLevelFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTimeFrameFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getUserTier();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getFromDate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 page = 1;
 * @return {number}
 */
proto.treum.signals.ListSignalsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.treum.signals.ListSignalsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional AssetType asset_type_filter = 3;
 * @return {!proto.treum.signals.AssetType}
 */
proto.treum.signals.ListSignalsRequest.prototype.getAssetTypeFilter = function() {
  return /** @type {!proto.treum.signals.AssetType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.treum.signals.AssetType} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setAssetTypeFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional SignalType type_filter = 4;
 * @return {!proto.treum.signals.SignalType}
 */
proto.treum.signals.ListSignalsRequest.prototype.getTypeFilter = function() {
  return /** @type {!proto.treum.signals.SignalType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.treum.signals.SignalType} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setTypeFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional SignalStatus status_filter = 5;
 * @return {!proto.treum.signals.SignalStatus}
 */
proto.treum.signals.ListSignalsRequest.prototype.getStatusFilter = function() {
  return /** @type {!proto.treum.signals.SignalStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.treum.signals.SignalStatus} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setStatusFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional RiskLevel risk_level_filter = 6;
 * @return {!proto.treum.signals.RiskLevel}
 */
proto.treum.signals.ListSignalsRequest.prototype.getRiskLevelFilter = function() {
  return /** @type {!proto.treum.signals.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.treum.signals.RiskLevel} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setRiskLevelFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional TimeFrame time_frame_filter = 7;
 * @return {!proto.treum.signals.TimeFrame}
 */
proto.treum.signals.ListSignalsRequest.prototype.getTimeFrameFilter = function() {
  return /** @type {!proto.treum.signals.TimeFrame} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.treum.signals.TimeFrame} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setTimeFrameFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * repeated string tags = 8;
 * @return {!Array<string>}
 */
proto.treum.signals.ListSignalsRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional SubscriptionTier user_tier = 9;
 * @return {!proto.treum.signals.SubscriptionTier}
 */
proto.treum.signals.ListSignalsRequest.prototype.getUserTier = function() {
  return /** @type {!proto.treum.signals.SubscriptionTier} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.treum.signals.SubscriptionTier} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.setUserTier = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp from_date = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.ListSignalsRequest.prototype.getFromDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
*/
proto.treum.signals.ListSignalsRequest.prototype.setFromDate = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.clearFromDate = function() {
  return this.setFromDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.ListSignalsRequest.prototype.hasFromDate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp to_date = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.ListSignalsRequest.prototype.getToDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
*/
proto.treum.signals.ListSignalsRequest.prototype.setToDate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.ListSignalsRequest} returns this
 */
proto.treum.signals.ListSignalsRequest.prototype.clearToDate = function() {
  return this.setToDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.ListSignalsRequest.prototype.hasToDate = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.treum.signals.ListSignalsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.ListSignalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.ListSignalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.ListSignalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ListSignalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signalsList: jspb.Message.toObjectList(msg.getSignalsList(),
    proto.treum.signals.SignalResponse.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalPages: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.ListSignalsResponse}
 */
proto.treum.signals.ListSignalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.ListSignalsResponse;
  return proto.treum.signals.ListSignalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.ListSignalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.ListSignalsResponse}
 */
proto.treum.signals.ListSignalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.treum.signals.SignalResponse;
      reader.readMessage(value,proto.treum.signals.SignalResponse.deserializeBinaryFromReader);
      msg.addSignals(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalPages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.ListSignalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.ListSignalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.ListSignalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ListSignalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.treum.signals.SignalResponse.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * repeated SignalResponse signals = 1;
 * @return {!Array<!proto.treum.signals.SignalResponse>}
 */
proto.treum.signals.ListSignalsResponse.prototype.getSignalsList = function() {
  return /** @type{!Array<!proto.treum.signals.SignalResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.treum.signals.SignalResponse, 1));
};


/**
 * @param {!Array<!proto.treum.signals.SignalResponse>} value
 * @return {!proto.treum.signals.ListSignalsResponse} returns this
*/
proto.treum.signals.ListSignalsResponse.prototype.setSignalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.treum.signals.SignalResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.SignalResponse}
 */
proto.treum.signals.ListSignalsResponse.prototype.addSignals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.treum.signals.SignalResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.ListSignalsResponse} returns this
 */
proto.treum.signals.ListSignalsResponse.prototype.clearSignalsList = function() {
  return this.setSignalsList([]);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.treum.signals.ListSignalsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListSignalsResponse} returns this
 */
proto.treum.signals.ListSignalsResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.treum.signals.ListSignalsResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListSignalsResponse} returns this
 */
proto.treum.signals.ListSignalsResponse.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.treum.signals.ListSignalsResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListSignalsResponse} returns this
 */
proto.treum.signals.ListSignalsResponse.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 total_pages = 5;
 * @return {number}
 */
proto.treum.signals.ListSignalsResponse.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListSignalsResponse} returns this
 */
proto.treum.signals.ListSignalsResponse.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.treum.signals.SignalResponse.repeatedFields_ = [15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.SignalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.SignalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.SignalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.SignalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    assetType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    stopLoss: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    takeProfit: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    riskLevel: jspb.Message.getFieldWithDefault(msg, 9, 0),
    timeFrame: jspb.Message.getFieldWithDefault(msg, 10, 0),
    confidence: jspb.Message.getFieldWithDefault(msg, 11, 0),
    analysis: jspb.Message.getFieldWithDefault(msg, 12, ""),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 14, ""),
    targetAudienceList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    performance: (f = msg.getPerformance()) && proto.treum.signals.SignalPerformanceData.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.SignalResponse}
 */
proto.treum.signals.SignalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.SignalResponse;
  return proto.treum.signals.SignalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.SignalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.SignalResponse}
 */
proto.treum.signals.SignalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {!proto.treum.signals.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 4:
      var value = /** @type {!proto.treum.signals.SignalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {!proto.treum.signals.SignalStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStopLoss(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeProfit(value);
      break;
    case 9:
      var value = /** @type {!proto.treum.signals.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    case 10:
      var value = /** @type {!proto.treum.signals.TimeFrame} */ (reader.readEnum());
      msg.setTimeFrame(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfidence(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnalysis(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 15:
      var values = /** @type {!Array<!proto.treum.signals.SubscriptionTier>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTargetAudience(values[i]);
      }
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 17:
      var value = new proto.treum.signals.SignalPerformanceData;
      reader.readMessage(value,proto.treum.signals.SignalPerformanceData.deserializeBinaryFromReader);
      msg.setPerformance(value);
      break;
    case 18:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.SignalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.SignalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.SignalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.SignalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAssetType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getStopLoss();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getTakeProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getTimeFrame();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getAnalysis();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTargetAudienceList();
  if (f.length > 0) {
    writer.writePackedEnum(
      15,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getPerformance();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.treum.signals.SignalPerformanceData.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.treum.signals.SignalResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.treum.signals.SignalResponse.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional AssetType asset_type = 3;
 * @return {!proto.treum.signals.AssetType}
 */
proto.treum.signals.SignalResponse.prototype.getAssetType = function() {
  return /** @type {!proto.treum.signals.AssetType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.treum.signals.AssetType} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setAssetType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional SignalType type = 4;
 * @return {!proto.treum.signals.SignalType}
 */
proto.treum.signals.SignalResponse.prototype.getType = function() {
  return /** @type {!proto.treum.signals.SignalType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.treum.signals.SignalType} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional SignalStatus status = 5;
 * @return {!proto.treum.signals.SignalStatus}
 */
proto.treum.signals.SignalResponse.prototype.getStatus = function() {
  return /** @type {!proto.treum.signals.SignalStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.treum.signals.SignalStatus} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional double price = 6;
 * @return {number}
 */
proto.treum.signals.SignalResponse.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double stop_loss = 7;
 * @return {number}
 */
proto.treum.signals.SignalResponse.prototype.getStopLoss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setStopLoss = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double take_profit = 8;
 * @return {number}
 */
proto.treum.signals.SignalResponse.prototype.getTakeProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setTakeProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional RiskLevel risk_level = 9;
 * @return {!proto.treum.signals.RiskLevel}
 */
proto.treum.signals.SignalResponse.prototype.getRiskLevel = function() {
  return /** @type {!proto.treum.signals.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.treum.signals.RiskLevel} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional TimeFrame time_frame = 10;
 * @return {!proto.treum.signals.TimeFrame}
 */
proto.treum.signals.SignalResponse.prototype.getTimeFrame = function() {
  return /** @type {!proto.treum.signals.TimeFrame} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.treum.signals.TimeFrame} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setTimeFrame = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional int32 confidence = 11;
 * @return {number}
 */
proto.treum.signals.SignalResponse.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string analysis = 12;
 * @return {string}
 */
proto.treum.signals.SignalResponse.prototype.getAnalysis = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setAnalysis = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional google.protobuf.Timestamp expires_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.SignalResponse.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.SignalResponse} returns this
*/
proto.treum.signals.SignalResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.SignalResponse.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string created_by = 14;
 * @return {string}
 */
proto.treum.signals.SignalResponse.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * repeated SubscriptionTier target_audience = 15;
 * @return {!Array<!proto.treum.signals.SubscriptionTier>}
 */
proto.treum.signals.SignalResponse.prototype.getTargetAudienceList = function() {
  return /** @type {!Array<!proto.treum.signals.SubscriptionTier>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<!proto.treum.signals.SubscriptionTier>} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setTargetAudienceList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {!proto.treum.signals.SubscriptionTier} value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.addTargetAudience = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.clearTargetAudienceList = function() {
  return this.setTargetAudienceList([]);
};


/**
 * repeated string tags = 16;
 * @return {!Array<string>}
 */
proto.treum.signals.SignalResponse.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional SignalPerformanceData performance = 17;
 * @return {?proto.treum.signals.SignalPerformanceData}
 */
proto.treum.signals.SignalResponse.prototype.getPerformance = function() {
  return /** @type{?proto.treum.signals.SignalPerformanceData} */ (
    jspb.Message.getWrapperField(this, proto.treum.signals.SignalPerformanceData, 17));
};


/**
 * @param {?proto.treum.signals.SignalPerformanceData|undefined} value
 * @return {!proto.treum.signals.SignalResponse} returns this
*/
proto.treum.signals.SignalResponse.prototype.setPerformance = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.clearPerformance = function() {
  return this.setPerformance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.SignalResponse.prototype.hasPerformance = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 18;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.SignalResponse.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 18));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.SignalResponse} returns this
*/
proto.treum.signals.SignalResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.SignalResponse.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.SignalResponse.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.SignalResponse} returns this
*/
proto.treum.signals.SignalResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.SignalResponse} returns this
 */
proto.treum.signals.SignalResponse.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.SignalResponse.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 19) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.SignalPerformanceData.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.SignalPerformanceData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.SignalPerformanceData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.SignalPerformanceData.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxPnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    currentPnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    hitStopLoss: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    hitTakeProfit: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    closedAt: (f = msg.getClosedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.SignalPerformanceData}
 */
proto.treum.signals.SignalPerformanceData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.SignalPerformanceData;
  return proto.treum.signals.SignalPerformanceData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.SignalPerformanceData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.SignalPerformanceData}
 */
proto.treum.signals.SignalPerformanceData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxPnl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentPnl(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHitStopLoss(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHitTakeProfit(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClosedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.SignalPerformanceData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.SignalPerformanceData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.SignalPerformanceData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.SignalPerformanceData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCurrentPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getHitStopLoss();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getHitTakeProfit();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getClosedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional double max_pnl = 1;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceData.prototype.getMaxPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceData} returns this
 */
proto.treum.signals.SignalPerformanceData.prototype.setMaxPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double current_pnl = 2;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceData.prototype.getCurrentPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceData} returns this
 */
proto.treum.signals.SignalPerformanceData.prototype.setCurrentPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool hit_stop_loss = 3;
 * @return {boolean}
 */
proto.treum.signals.SignalPerformanceData.prototype.getHitStopLoss = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.treum.signals.SignalPerformanceData} returns this
 */
proto.treum.signals.SignalPerformanceData.prototype.setHitStopLoss = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool hit_take_profit = 4;
 * @return {boolean}
 */
proto.treum.signals.SignalPerformanceData.prototype.getHitTakeProfit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.treum.signals.SignalPerformanceData} returns this
 */
proto.treum.signals.SignalPerformanceData.prototype.setHitTakeProfit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp closed_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.SignalPerformanceData.prototype.getClosedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.SignalPerformanceData} returns this
*/
proto.treum.signals.SignalPerformanceData.prototype.setClosedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.SignalPerformanceData} returns this
 */
proto.treum.signals.SignalPerformanceData.prototype.clearClosedAt = function() {
  return this.setClosedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.SignalPerformanceData.prototype.hasClosedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.GetSignalPerformanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.GetSignalPerformanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.GetSignalPerformanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.GetSignalPerformanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    signalId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.GetSignalPerformanceRequest}
 */
proto.treum.signals.GetSignalPerformanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.GetSignalPerformanceRequest;
  return proto.treum.signals.GetSignalPerformanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.GetSignalPerformanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.GetSignalPerformanceRequest}
 */
proto.treum.signals.GetSignalPerformanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.GetSignalPerformanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.GetSignalPerformanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.GetSignalPerformanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.GetSignalPerformanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string signal_id = 1;
 * @return {string}
 */
proto.treum.signals.GetSignalPerformanceRequest.prototype.getSignalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.GetSignalPerformanceRequest} returns this
 */
proto.treum.signals.GetSignalPerformanceRequest.prototype.setSignalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.SignalPerformanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.SignalPerformanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.SignalPerformanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalFollowers: jspb.Message.getFieldWithDefault(msg, 2, 0),
    successfulTrades: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalTrades: jspb.Message.getFieldWithDefault(msg, 4, 0),
    avgPnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    winRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    avgHoldingTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    riskAdjustedReturn: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.SignalPerformanceResponse}
 */
proto.treum.signals.SignalPerformanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.SignalPerformanceResponse;
  return proto.treum.signals.SignalPerformanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.SignalPerformanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.SignalPerformanceResponse}
 */
proto.treum.signals.SignalPerformanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalFollowers(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSuccessfulTrades(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalTrades(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvgPnl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWinRate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvgHoldingTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRiskAdjustedReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.SignalPerformanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.SignalPerformanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.SignalPerformanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalFollowers();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSuccessfulTrades();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTotalTrades();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAvgPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getWinRate();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getAvgHoldingTime();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getRiskAdjustedReturn();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional string signal_id = 1;
 * @return {string}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getSignalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setSignalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 total_followers = 2;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getTotalFollowers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setTotalFollowers = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 successful_trades = 3;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getSuccessfulTrades = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setSuccessfulTrades = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 total_trades = 4;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getTotalTrades = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setTotalTrades = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double avg_pnl = 5;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getAvgPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setAvgPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double win_rate = 6;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getWinRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setWinRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double avg_holding_time = 7;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getAvgHoldingTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setAvgHoldingTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double risk_adjusted_return = 8;
 * @return {number}
 */
proto.treum.signals.SignalPerformanceResponse.prototype.getRiskAdjustedReturn = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.SignalPerformanceResponse} returns this
 */
proto.treum.signals.SignalPerformanceResponse.prototype.setRiskAdjustedReturn = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.ListActiveSignalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.ListActiveSignalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ListActiveSignalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userTier: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assetTypeFilter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    riskLevelFilter: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.ListActiveSignalsRequest}
 */
proto.treum.signals.ListActiveSignalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.ListActiveSignalsRequest;
  return proto.treum.signals.ListActiveSignalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.ListActiveSignalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.ListActiveSignalsRequest}
 */
proto.treum.signals.ListActiveSignalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.treum.signals.SubscriptionTier} */ (reader.readEnum());
      msg.setUserTier(value);
      break;
    case 2:
      var value = /** @type {!proto.treum.signals.AssetType} */ (reader.readEnum());
      msg.setAssetTypeFilter(value);
      break;
    case 3:
      var value = /** @type {!proto.treum.signals.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevelFilter(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.ListActiveSignalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.ListActiveSignalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.ListActiveSignalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserTier();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAssetTypeFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRiskLevelFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional SubscriptionTier user_tier = 1;
 * @return {!proto.treum.signals.SubscriptionTier}
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.getUserTier = function() {
  return /** @type {!proto.treum.signals.SubscriptionTier} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.treum.signals.SubscriptionTier} value
 * @return {!proto.treum.signals.ListActiveSignalsRequest} returns this
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.setUserTier = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional AssetType asset_type_filter = 2;
 * @return {!proto.treum.signals.AssetType}
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.getAssetTypeFilter = function() {
  return /** @type {!proto.treum.signals.AssetType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.treum.signals.AssetType} value
 * @return {!proto.treum.signals.ListActiveSignalsRequest} returns this
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.setAssetTypeFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional RiskLevel risk_level_filter = 3;
 * @return {!proto.treum.signals.RiskLevel}
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.getRiskLevelFilter = function() {
  return /** @type {!proto.treum.signals.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.treum.signals.RiskLevel} value
 * @return {!proto.treum.signals.ListActiveSignalsRequest} returns this
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.setRiskLevelFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.ListActiveSignalsRequest} returns this
 */
proto.treum.signals.ListActiveSignalsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.FollowSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.FollowSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.FollowSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.FollowSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signalId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    allocationAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.FollowSignalRequest}
 */
proto.treum.signals.FollowSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.FollowSignalRequest;
  return proto.treum.signals.FollowSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.FollowSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.FollowSignalRequest}
 */
proto.treum.signals.FollowSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAllocationAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.FollowSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.FollowSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.FollowSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.FollowSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAllocationAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.treum.signals.FollowSignalRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.FollowSignalRequest} returns this
 */
proto.treum.signals.FollowSignalRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string signal_id = 2;
 * @return {string}
 */
proto.treum.signals.FollowSignalRequest.prototype.getSignalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.FollowSignalRequest} returns this
 */
proto.treum.signals.FollowSignalRequest.prototype.setSignalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double allocation_amount = 3;
 * @return {number}
 */
proto.treum.signals.FollowSignalRequest.prototype.getAllocationAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.FollowSignalRequest} returns this
 */
proto.treum.signals.FollowSignalRequest.prototype.setAllocationAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.UnfollowSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.UnfollowSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.UnfollowSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UnfollowSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signalId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.UnfollowSignalRequest}
 */
proto.treum.signals.UnfollowSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.UnfollowSignalRequest;
  return proto.treum.signals.UnfollowSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.UnfollowSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.UnfollowSignalRequest}
 */
proto.treum.signals.UnfollowSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.UnfollowSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.UnfollowSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.UnfollowSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UnfollowSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.treum.signals.UnfollowSignalRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.UnfollowSignalRequest} returns this
 */
proto.treum.signals.UnfollowSignalRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string signal_id = 2;
 * @return {string}
 */
proto.treum.signals.UnfollowSignalRequest.prototype.getSignalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.UnfollowSignalRequest} returns this
 */
proto.treum.signals.UnfollowSignalRequest.prototype.setSignalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.GetUserSignalHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.GetUserSignalHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.GetUserSignalHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fromDate: (f = msg.getFromDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    toDate: (f = msg.getToDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest}
 */
proto.treum.signals.GetUserSignalHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.GetUserSignalHistoryRequest;
  return proto.treum.signals.GetUserSignalHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.GetUserSignalHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest}
 */
proto.treum.signals.GetUserSignalHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromDate(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.GetUserSignalHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.GetUserSignalHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.GetUserSignalHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFromDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp from_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.getFromDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
*/
proto.treum.signals.GetUserSignalHistoryRequest.prototype.setFromDate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.clearFromDate = function() {
  return this.setFromDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.hasFromDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp to_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.getToDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
*/
proto.treum.signals.GetUserSignalHistoryRequest.prototype.setToDate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.GetUserSignalHistoryRequest} returns this
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.clearToDate = function() {
  return this.setToDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.GetUserSignalHistoryRequest.prototype.hasToDate = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.treum.signals.UserSignalHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.UserSignalHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.UserSignalHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UserSignalHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    followsList: jspb.Message.toObjectList(msg.getFollowsList(),
    proto.treum.signals.UserSignalFollow.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalPnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    totalAllocated: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    successfulSignals: jspb.Message.getFieldWithDefault(msg, 7, 0),
    winRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.UserSignalHistoryResponse}
 */
proto.treum.signals.UserSignalHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.UserSignalHistoryResponse;
  return proto.treum.signals.UserSignalHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.UserSignalHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.UserSignalHistoryResponse}
 */
proto.treum.signals.UserSignalHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.treum.signals.UserSignalFollow;
      reader.readMessage(value,proto.treum.signals.UserSignalFollow.deserializeBinaryFromReader);
      msg.addFollows(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalPnl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalAllocated(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSuccessfulSignals(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWinRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.UserSignalHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.UserSignalHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UserSignalHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFollowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.treum.signals.UserSignalFollow.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTotalAllocated();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSuccessfulSignals();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getWinRate();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * repeated UserSignalFollow follows = 1;
 * @return {!Array<!proto.treum.signals.UserSignalFollow>}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getFollowsList = function() {
  return /** @type{!Array<!proto.treum.signals.UserSignalFollow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.treum.signals.UserSignalFollow, 1));
};


/**
 * @param {!Array<!proto.treum.signals.UserSignalFollow>} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
*/
proto.treum.signals.UserSignalHistoryResponse.prototype.setFollowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.treum.signals.UserSignalFollow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.treum.signals.UserSignalFollow}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.addFollows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.treum.signals.UserSignalFollow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.clearFollowsList = function() {
  return this.setFollowsList([]);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double total_pnl = 5;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getTotalPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setTotalPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double total_allocated = 6;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getTotalAllocated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setTotalAllocated = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 successful_signals = 7;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getSuccessfulSignals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setSuccessfulSignals = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double win_rate = 8;
 * @return {number}
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.getWinRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalHistoryResponse} returns this
 */
proto.treum.signals.UserSignalHistoryResponse.prototype.setWinRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.treum.signals.UserSignalFollow.prototype.toObject = function(opt_includeInstance) {
  return proto.treum.signals.UserSignalFollow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.treum.signals.UserSignalFollow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UserSignalFollow.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signalId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signal: (f = msg.getSignal()) && proto.treum.signals.SignalResponse.toObject(includeInstance, f),
    allocationAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    realizedPnl: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    followedAt: (f = msg.getFollowedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    closedAt: (f = msg.getClosedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.treum.signals.UserSignalFollow}
 */
proto.treum.signals.UserSignalFollow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.treum.signals.UserSignalFollow;
  return proto.treum.signals.UserSignalFollow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.treum.signals.UserSignalFollow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.treum.signals.UserSignalFollow}
 */
proto.treum.signals.UserSignalFollow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalId(value);
      break;
    case 3:
      var value = new proto.treum.signals.SignalResponse;
      reader.readMessage(value,proto.treum.signals.SignalResponse.deserializeBinaryFromReader);
      msg.setSignal(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAllocationAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRealizedPnl(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFollowedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClosedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.treum.signals.UserSignalFollow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.treum.signals.UserSignalFollow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.treum.signals.UserSignalFollow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.treum.signals.UserSignalFollow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.treum.signals.SignalResponse.serializeBinaryToWriter
    );
  }
  f = message.getAllocationAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRealizedPnl();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getFollowedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClosedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.treum.signals.UserSignalFollow.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string signal_id = 2;
 * @return {string}
 */
proto.treum.signals.UserSignalFollow.prototype.getSignalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.setSignalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SignalResponse signal = 3;
 * @return {?proto.treum.signals.SignalResponse}
 */
proto.treum.signals.UserSignalFollow.prototype.getSignal = function() {
  return /** @type{?proto.treum.signals.SignalResponse} */ (
    jspb.Message.getWrapperField(this, proto.treum.signals.SignalResponse, 3));
};


/**
 * @param {?proto.treum.signals.SignalResponse|undefined} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
*/
proto.treum.signals.UserSignalFollow.prototype.setSignal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.clearSignal = function() {
  return this.setSignal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.UserSignalFollow.prototype.hasSignal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double allocation_amount = 4;
 * @return {number}
 */
proto.treum.signals.UserSignalFollow.prototype.getAllocationAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.setAllocationAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double realized_pnl = 5;
 * @return {number}
 */
proto.treum.signals.UserSignalFollow.prototype.getRealizedPnl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.setRealizedPnl = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp followed_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.UserSignalFollow.prototype.getFollowedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
*/
proto.treum.signals.UserSignalFollow.prototype.setFollowedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.clearFollowedAt = function() {
  return this.setFollowedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.UserSignalFollow.prototype.hasFollowedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp closed_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.treum.signals.UserSignalFollow.prototype.getClosedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.treum.signals.UserSignalFollow} returns this
*/
proto.treum.signals.UserSignalFollow.prototype.setClosedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.treum.signals.UserSignalFollow} returns this
 */
proto.treum.signals.UserSignalFollow.prototype.clearClosedAt = function() {
  return this.setClosedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.treum.signals.UserSignalFollow.prototype.hasClosedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * @enum {number}
 */
proto.treum.signals.AssetType = {
  ASSET_TYPE_UNSPECIFIED: 0,
  ASSET_TYPE_STOCK: 1,
  ASSET_TYPE_CRYPTO: 2,
  ASSET_TYPE_FOREX: 3,
  ASSET_TYPE_COMMODITY: 4,
  ASSET_TYPE_INDEX: 5,
  ASSET_TYPE_BOND: 6
};

/**
 * @enum {number}
 */
proto.treum.signals.SignalType = {
  SIGNAL_TYPE_UNSPECIFIED: 0,
  SIGNAL_TYPE_BUY: 1,
  SIGNAL_TYPE_SELL: 2,
  SIGNAL_TYPE_HOLD: 3
};

/**
 * @enum {number}
 */
proto.treum.signals.SignalStatus = {
  SIGNAL_STATUS_UNSPECIFIED: 0,
  SIGNAL_STATUS_ACTIVE: 1,
  SIGNAL_STATUS_EXPIRED: 2,
  SIGNAL_STATUS_EXECUTED: 3,
  SIGNAL_STATUS_CANCELLED: 4
};

/**
 * @enum {number}
 */
proto.treum.signals.RiskLevel = {
  RISK_LEVEL_UNSPECIFIED: 0,
  RISK_LEVEL_LOW: 1,
  RISK_LEVEL_MEDIUM: 2,
  RISK_LEVEL_HIGH: 3,
  RISK_LEVEL_VERY_HIGH: 4
};

/**
 * @enum {number}
 */
proto.treum.signals.TimeFrame = {
  TIME_FRAME_UNSPECIFIED: 0,
  TIME_FRAME_1M: 1,
  TIME_FRAME_5M: 2,
  TIME_FRAME_15M: 3,
  TIME_FRAME_30M: 4,
  TIME_FRAME_1H: 5,
  TIME_FRAME_4H: 6,
  TIME_FRAME_1D: 7,
  TIME_FRAME_1W: 8,
  TIME_FRAME_1MONTH: 9
};

/**
 * @enum {number}
 */
proto.treum.signals.SubscriptionTier = {
  SUBSCRIPTION_TIER_UNSPECIFIED: 0,
  SUBSCRIPTION_TIER_FREE: 1,
  SUBSCRIPTION_TIER_BASIC: 2,
  SUBSCRIPTION_TIER_PREMIUM: 3,
  SUBSCRIPTION_TIER_ENTERPRISE: 4
};

goog.object.extend(exports, proto.treum.signals);
