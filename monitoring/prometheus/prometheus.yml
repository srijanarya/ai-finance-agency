# AI Finance Agency - Enhanced Prometheus Configuration
# Production-ready monitoring for 10 microservices architecture
# SRE-grade observability with comprehensive metrics collection

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    cluster: 'ai-finance'
    environment: 'production'
    region: 'us-east-1'
    version: '1.0.0'

# Rule files for alerting
rule_files:
  - "rules/*.yml"
  - "rules/slo/*.yml"
  - "rules/business/*.yml"
  - "rules/infrastructure/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # =======================================================================
  # MICROSERVICES METRICS
  # =======================================================================
  
  # API Gateway - Entry point metrics
  - job_name: 'api-gateway'
    static_configs:
      - targets: ['api-gateway:3000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    params:
      format: ['prometheus']

  # User Management Service
  - job_name: 'user-management'
    static_configs:
      - targets: ['user-management:3002']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Payment Service - Critical for revenue tracking
  - job_name: 'payment'
    static_configs:
      - targets: ['payment:3001']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    params:
      format: ['prometheus']

  # Signals Service - Core business logic
  - job_name: 'signals'
    static_configs:
      - targets: ['signals:3003']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s

  # Trading Service - High frequency metrics
  - job_name: 'trading'
    static_configs:
      - targets: ['trading:3004']
    metrics_path: '/metrics'
    scrape_interval: 5s
    scrape_timeout: 4s

  # Education Service
  - job_name: 'education'
    static_configs:
      - targets: ['education:3005']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Notification Service
  - job_name: 'notification'
    static_configs:
      - targets: ['notification:3006']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Risk Management Service - Critical monitoring
  - job_name: 'risk-management'
    static_configs:
      - targets: ['risk-management:3007']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s

  # Market Data Service - Real-time data source
  - job_name: 'market-data'
    static_configs:
      - targets: ['market-data:3008']
    metrics_path: '/metrics'
    scrape_interval: 5s
    scrape_timeout: 4s

  # Content Intelligence Service
  - job_name: 'content-intelligence'
    static_configs:
      - targets: ['content-intelligence:3009']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Background Worker Service
  - job_name: 'worker'
    static_configs:
      - targets: ['worker:3010']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Task Scheduler Service
  - job_name: 'scheduler'
    static_configs:
      - targets: ['scheduler:8080']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # =======================================================================
  # INFRASTRUCTURE METRICS
  # =======================================================================

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s

  # RabbitMQ Message Broker
  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq:15692']
    scrape_interval: 15s

  # MongoDB
  - job_name: 'mongodb'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 15s

  # Nginx Load Balancer
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # =======================================================================
  # SYSTEM METRICS
  # =======================================================================

  # Node Exporter - System metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: '/metrics'

  # Blackbox Exporter - External service monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://api-gateway:3000/health
        - http://user-management:3002/health
        - http://payment:3001/health
        - http://trading:3004/health
        - http://signals:3003/health
        - http://education:3005/health
        - http://notification:3006/health
        - http://risk-management:3007/health
        - http://market-data:3008/health
        - http://content-intelligence:3009/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # =======================================================================
  # SELF-MONITORING
  # =======================================================================

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Grafana monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Alertmanager monitoring
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s

  # =======================================================================
  # BUSINESS METRICS
  # =======================================================================

  # Custom business metrics aggregation
  - job_name: 'business-metrics'
    static_configs:
      - targets: 
        - 'payment:3001'
        - 'trading:3004'
        - 'signals:3003'
    metrics_path: '/metrics/business'
    scrape_interval: 30s
    params:
      format: ['prometheus']

  # Revenue tracking metrics
  - job_name: 'revenue-metrics'
    static_configs:
      - targets: ['payment:3001']
    metrics_path: '/metrics/revenue'
    scrape_interval: 60s

  # SLO metrics collection
  - job_name: 'slo-metrics'
    static_configs:
      - targets:
        - 'api-gateway:3000'
        - 'payment:3001'
        - 'trading:3004'
        - 'market-data:3008'
    metrics_path: '/metrics/slo'
    scrape_interval: 30s
    params:
      slo: ['availability', 'latency', 'error_rate']

  # Custom application metrics
  - job_name: 'app-metrics'
    static_configs:
      - targets:
        - 'api-gateway:3000'
        - 'user-management:3002'
        - 'payment:3001'
        - 'signals:3003'
        - 'trading:3004'
        - 'education:3005'
        - 'notification:3006'
        - 'risk-management:3007'
        - 'market-data:3008'
        - 'content-intelligence:3009'
    metrics_path: '/metrics/custom'
    scrape_interval: 30s

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-prod.grafana.net/api/prom/push"
#     basic_auth:
#       username: "${GRAFANA_CLOUD_USERNAME}"
#       password: "${GRAFANA_CLOUD_API_KEY}"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true
    # High performance settings
    max-block-duration: 2h
    min-block-duration: 2h

# Recording rules for performance optimization
recording_rules:
  - record: instance:node_cpu_utilisation:rate5m
    expr: 1 - avg(rate(node_cpu_seconds_total{mode="idle"}[5m])) BY (instance)
  - record: instance:node_memory_utilisation:ratio
    expr: 1 - ((node_memory_MemAvailable_bytes or node_memory_MemFree_bytes) / node_memory_MemTotal_bytes)
  - record: instance:node_load1_per_cpu:ratio
    expr: (node_load1 / count(node_cpu_seconds_total{mode="idle"}) BY (instance))
  - record: cluster:namespace:pod_memory:active:kube_pod_overhead
    expr: kube_pod_overhead{resource="memory"} + on(namespace, pod) group_left() kube_pod_container_resource_requests{resource="memory"}
  - record: cluster:namespace:pod_cpu:active:kube_pod_overhead
    expr: kube_pod_overhead{resource="cpu"} + on(namespace, pod) group_left() kube_pod_container_resource_requests{resource="cpu"}

# Federated monitoring for external data sources
federate:
  - job_name: 'federate'
    scrape_interval: 15s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"prometheus|node|cadvisor"}
        - '{__name__=~"job:.*"}'
        - '{__name__=~"instance:.*"}'
    static_configs:
      - targets:
        # Add external Prometheus instances here if needed